#[INFO]
Prompt file 2/2

                logger.info("User aborted writing prompt files.")
                return []

        for i, chunk in enumerate(chunks, 1):
            filename = self.output_dir / f"prompt_{i}.txt"
            filename.write_text(chunk, encoding="utf-8")
            txt_files.append(filename)

        logger.info(f"Wrote {len(txt_files)} text file(s) to {self.output_dir}")
        return txt_files

    def clear_output(self):
        for file_path in self.output_dir.glob("prompt_*.txt"):
            if file_path.is_file():
                file_path.unlink()
        logger.info(f"Cleared existing prompt file(s) in {self.output_dir}")


#[FILE] src\snib\__init__.py


#[FILE] src\snib\__main__.py
import logging

from .cli import parse_args, main

if __name__ == "__main__":
    args = parse_args()

    if getattr(args, "dev", False):
        log_level = logging.DEBUG
    elif getattr(args, "verbose", False):
        log_level = logging.INFO
    else:
        log_level = logging.WARNING

    logging.basicConfig(
        level=log_level,
        format="%(asctime)s [%(levelname)s] %(name)s: %(message)s"
    )
    main()

#[FILE] src\snib\__pycache__\chunker.cpython-313.pyc
<Could not read chunker.cpython-313.pyc>


#[FILE] src\snib\__pycache__\cli.cpython-313.pyc
<Could not read cli.cpython-313.pyc>


#[FILE] src\snib\__pycache__\extensions.cpython-313.pyc
<Could not read extensions.cpython-313.pyc>


#[FILE] src\snib\__pycache__\formatter.cpython-313.pyc
<Could not read formatter.cpython-313.pyc>


#[FILE] src\snib\__pycache__\models.cpython-313.pyc
<Could not read models.cpython-313.pyc>


#[FILE] src\snib\__pycache__\scanner.cpython-313.pyc
<Could not read scanner.cpython-313.pyc>


#[FILE] src\snib\__pycache__\section.cpython-313.pyc
<Could not read section.cpython-313.pyc>


#[FILE] src\snib\__pycache__\tasks.cpython-313.pyc
<Could not read tasks.cpython-313.pyc>


#[FILE] src\snib\__pycache__\utils.cpython-313.pyc
<Could not read utils.cpython-313.pyc>


#[FILE] src\snib\__pycache__\writer.cpython-313.pyc
<Could not read writer.cpython-313.pyc>


#[FILE] src\snib\__pycache__\__init__.cpython-313.pyc
<Could not read __init__.cpython-313.pyc>


#[FILE] src\snib\__pycache__\__main__.cpython-313.pyc
<Could not read __main__.cpython-313.pyc>


